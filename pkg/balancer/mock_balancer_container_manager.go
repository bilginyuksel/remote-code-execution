// Code generated by MockGen. DO NOT EDIT.
// Source: balancer.go

// Package mock_main is a generated GoMock package.
package balancer

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBalancerContainerManager is a mock of BalancerContainerManager interface.
type MockBalancerContainerManager struct {
	ctrl     *gomock.Controller
	recorder *MockBalancerContainerManagerMockRecorder
}

// MockBalancerContainerManagerMockRecorder is the mock recorder for MockBalancerContainerManager.
type MockBalancerContainerManagerMockRecorder struct {
	mock *MockBalancerContainerManager
}

// NewMockBalancerContainerManager creates a new mock instance.
func NewMockBalancerContainerManager(ctrl *gomock.Controller) *MockBalancerContainerManager {
	mock := &MockBalancerContainerManager{ctrl: ctrl}
	mock.recorder = &MockBalancerContainerManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalancerContainerManager) EXPECT() *MockBalancerContainerManagerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockBalancerContainerManager) Create(ctx context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockBalancerContainerManagerMockRecorder) Create(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBalancerContainerManager)(nil).Create), ctx)
}

// Remove mocks base method.
func (m *MockBalancerContainerManager) Remove(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Remove", ctx)
}

// Remove indicates an expected call of Remove.
func (mr *MockBalancerContainerManagerMockRecorder) Remove(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockBalancerContainerManager)(nil).Remove), ctx)
}
